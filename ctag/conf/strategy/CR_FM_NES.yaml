# @package _global_
hydra:
  sweeper:
    ax_config:
      max_trials: 10
      params:
        strategy.algorithm.popsize:
          type: range
          bounds: [10, 100]
        strategy.algorithm.mean_decay:
          type: range
          bounds: [0.0, 1.0]
        # strategy.evoparams.mu_eff:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.c_s:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.c_c:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.c1:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.chi_N:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.h_inv:
        #   type: range
        #   bounds: [0.0, 1.0]
        # strategy.evoparams.alpha_dist:
        #   type: range
        #   bounds: [0.0, 1.0]
        strategy.evoparams.lrate_mean:
          type: range
          bounds: [0.0, 1.0]
        strategy.evoparams.lrate_move_sigma:
          type: range
          bounds: [0.0, 1.0]
        strategy.evoparams.lrate_stag_sigma:
          type: range
          bounds: [0.0, 1.0]
        strategy.evoparams.lrate_conv_sigma:
          type: range
          bounds: [0.0, 1.0]
        strategy.evoparams.lrate_B:
          type: range
          bounds: [0.0, 1.0]
        strategy.evoparams.sigma_init:
          type: range
          bounds: [0.0, 1.0]

strategy:
  name: CR_FM_NES
  algorithm:
    _target_: evosax.strategies.CR_FM_NES
    popsize: ${general.popsize}
    num_dims: null
    pholder_params: null
    mean_decay: 0.0
    n_devices: null
  evoparams:
    # mu_eff: float
    # c_s: float
    # c_c: float
    # c1: float
    # chi_N: float
    # h_inv: float
    # alpha_dist: float
    lrate_mean: 1.0
    lrate_move_sigma: 0.1
    lrate_stag_sigma: 0.1
    lrate_conv_sigma: 0.1
    lrate_B: 0.1
    sigma_init: 1.0
    init_min: 0.0
    init_max: 1.0
    clip_min: 0.0
    clip_max: 1.0
